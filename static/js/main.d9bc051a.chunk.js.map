{"version":3,"sources":["App.js","logo.svg","reportWebVitals.js","index.js"],"names":["App","useState","result","setResult","handleclick","e","concat","target","name","clear","backspace","slice","calculate","eval","error","className","type","value","onClick","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"q7BAIMA,IAAM,SAANA,MACJ,cAA4BC,oDAAS,IAArC,+NAAOC,OAAP,cAAeC,UAAf,cAEMC,YAAc,SAACC,GAEnBF,UAAUD,OAAOI,OAAOD,EAAEE,OAAOC,QAI7BC,MAAQ,WAEXN,UAAU,KAGPO,UAAY,WAEhBP,UAAUD,OAAOS,MAAM,GAAI,KAGvBC,UAAY,SAAZA,YACJ,IACET,UAAUU,KAAKX,SAEhB,MAAOY,OAENX,UAAU,WAMd,OACE,mEAAKY,UAAU,MAAf,UAEG,4EACK,oEAAOC,KAAK,OAAOC,MAAOf,WAE9B,mEAAKa,UAAU,SAAf,UACC,qEAAQA,UAAU,YAAYG,QAAST,MAAOU,GAAG,QAAjD,mBACA,qEAAQJ,UAAU,YAAYG,QAASR,UAAWS,GAAG,YAArD,eACA,qEAAQJ,UAAU,YAAYP,KAAK,IAAIU,QAASd,YAAhD,kBACA,qEAAQI,KAAK,IAAIU,QAASd,YAA1B,eACA,qEAAQI,KAAK,IAAIU,QAASd,YAA1B,eACA,qEAAQI,KAAK,IAAIU,QAASd,YAA1B,eACA,qEAAQW,UAAU,YAAYP,KAAK,IAAIU,QAASd,YAAhD,kBACA,qEAAQI,KAAK,IAAKU,QAASd,YAA3B,eACA,qEAAQI,KAAK,IAAIU,QAASd,YAA1B,eACA,qEAAQI,KAAK,IAAIU,QAASd,YAA1B,eACA,qEAAQW,UAAU,YAAYP,KAAK,IAAIU,QAASd,YAAhD,oBACA,qEAAQI,KAAK,IAAIU,QAASd,YAA1B,eACA,qEAAQI,KAAK,IAAIU,QAASd,YAA1B,eACA,qEAAQI,KAAK,IAAIU,QAASd,YAA1B,eACA,qEAAQW,UAAU,YAAYP,KAAK,IAAIU,QAASd,YAAhD,eACA,qEAAQI,KAAK,IAAIU,QAASd,YAA1B,eACA,qEAAQI,KAAK,IAAIU,QAASd,YAA1B,eACA,qEAAQW,UAAU,YAAYP,KAAK,IAAIU,QAASN,UAAWO,GAAG,SAA9D,sBASMnB,2B,oDCpEA,K,0GCYAoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC/B,EAAA,EAAD,MAEFgC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d9bc051a.chunk.js","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, {useState} from 'react';\n\nconst App = () => {\n  const [result, setResult] = useState(\"\");\n\n  const handleclick = (e) => {\n \n    setResult(result.concat(e.target.name));\n\n  }\n\n  const clear = () => {\n      \n     setResult(\"\");\n\n  }\n  const backspace = () => {\n \n    setResult(result.slice(0, -1));\n\n  }\n  const calculate = () => {\n    try {\n      setResult(eval(result));\n        } \n     catch (error)\n        {\n      setResult(\"Error\")\n        }\n      \n    \n  }\n\n  return (\n    <div className=\"App\">\n     \n       <form>\n            <input type=\"text\" value={result}></input>\n        </form>\n        <div className=\"keypad\">\n         <button className=\"highlight\" onClick={clear} id=\"clear\">CLEAR</button>\n         <button className=\"highlight\" onClick={backspace} id=\"backspace\">C</button>\n         <button className=\"highlight\" name=\"/\" onClick={handleclick}>&divide;</button>\n         <button name=\"7\" onClick={handleclick}>7</button>\n         <button name=\"8\" onClick={handleclick}>8</button>\n         <button name=\"9\" onClick={handleclick}>9</button>\n         <button className=\"highlight\" name=\"*\" onClick={handleclick}>&times;</button>\n         <button name=\"4\"  onClick={handleclick}>4</button>\n         <button name=\"5\" onClick={handleclick} >5</button>\n         <button name=\"6\" onClick={handleclick}>6</button>\n         <button className=\"highlight\" name=\"-\" onClick={handleclick}>&ndash;</button>\n         <button name=\"1\" onClick={handleclick}>1</button>\n         <button name=\"2\" onClick={handleclick}>2</button>\n         <button name=\"3\" onClick={handleclick}>3</button>\n         <button className=\"highlight\" name=\"+\" onClick={handleclick}>+</button>\n         <button name=\"0\" onClick={handleclick}>0</button>\n         <button name=\",\" onClick={handleclick}>,</button>\n         <button className=\"highlight\" name=\"=\" onClick={calculate} id=\"result\">=</button>\n\n\n       </div>\n         \n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}